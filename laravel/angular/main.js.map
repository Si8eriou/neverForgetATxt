{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/auth/auth.component.ts","./src/app/auth/auth/auth.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/home/home.component.ts","./src/app/home/home/home.component.html","./src/app/icons/icons.component.ts","./src/app/icons/icons.module.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/never-forget-atext/contacts/contact-form/contact-form.component.ts","./src/app/never-forget-atext/contacts/contact-form/contact-form.component.html","./src/app/never-forget-atext/contacts/create-contact/create-contact.component.ts","./src/app/never-forget-atext/contacts/create-contact/create-contact.component.html","./src/app/never-forget-atext/contacts/edit-contact/edit-contact.component.ts","./src/app/never-forget-atext/contacts/edit-contact/edit-contact.component.html","./src/app/never-forget-atext/contacts/user-contacts/user-contacts.component.ts","./src/app/never-forget-atext/contacts/user-contacts/user-contacts.component.html","./src/app/never-forget-atext/never-forget-atext-routing.module.ts","./src/app/never-forget-atext/never-forget-atext.module.ts","./src/app/never-forget-atext/never-forget-atext/never-forget-atext.component.ts","./src/app/never-forget-atext/never-forget-atext/never-forget-atext.component.html","./src/app/utilities/services/auth.service.ts","./src/app/utilities/services/contact.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACO;;;AAG9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,+BAA+B;KAC9C;IACD;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,+BAA+B;QAC7C,WAAW,EAAC,CAAC,4EAAW,CAAC;KAC1B;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;QACjB,WAAW,EAAC,CAAC,4EAAW,CAAC;KAC1B;IACD;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,uEAAuE;QACrF,WAAW,EAAC,CAAC,4EAAW,CAAC;KAC1B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,eAAe,EAAE,SAAS,EAAC,CAAC,CAAC;QAC3D,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,eAAe,EAAE,SAAS,EAAC,CAAC,CAAC;gBACrE,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,4EAAiC;QACjC,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACuB;AACS;AACpB;AACN;AACI;AACJ;AACiC;AACrC;AACH;AACU;AACM;AAChB;;AAyBvC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAfF;YACL,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,0EAAgB;YAChB,oEAAa;YACb,wEAAe;YACf,oEAAa;YACb,qGAAsB;YACtB,gEAAW;YACX,6DAAU;YACV,sEAAgB;YAChB,8EAAiB;YACjB,6DAAU;SACb;mIAIQ,SAAS,mBArBlB,2DAAY;QACZ,oFAAmB,aAGf,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,qGAAsB;QACtB,gEAAW;QACX,6DAAU;QACV,sEAAgB;QAChB,8EAAiB;QACjB,6DAAU;6FAKL,SAAS;cAvBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oFAAmB;iBACpB;gBACC,OAAO,EAAE;oBACL,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,0EAAgB;oBAChB,oEAAa;oBACb,wEAAe;oBACf,oEAAa;oBACb,qGAAsB;oBACtB,gEAAW;oBACX,6DAAU;oBACV,sEAAgB;oBAChB,8EAAiB;oBACjB,6DAAU;iBACb;gBACH,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEO;AACG;AACS;AACrB;AACF;AACqB;AACrB;AACc;AACF;;;AAahD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBATZ;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,yDAAW,CAAC;YAClC,+EAAkB;YAClB,0DAAW;YACX,wEAAe;YACf,uEAAc;SACf;mIAEU,UAAU,mBAVN,kEAAa,EAAE,qEAAc,EAAE,8EAAiB,aAE7D,4DAAY,gEAEZ,+EAAkB;QAClB,0DAAW;QACX,wEAAe;QACf,uEAAc;6FAGL,UAAU;cAXtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kEAAa,EAAE,qEAAc,EAAE,8EAAiB,CAAC;gBAChE,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC,yDAAW,CAAC;oBAClC,+EAAkB;oBAClB,0DAAW;oBACX,wEAAe;oBACf,uEAAc;iBACf;aACF;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAuD;AACH;AACY;AAEzD,MAAM,WAAW,GAAG;IACzB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IACD;QACE,IAAI,EAAG,cAAc;QACrB,SAAS,EAAE,8EAAiB;KAC7B;CAEF;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,aAAa;IAExB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACE;QAAA,yEACE;QAAA,2EAA+B;QACjC,4DAAM;QACR,4DAAM;QACN,uEAAuB;;6FDEV,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;;;;;;;;;;;;;AENiD;;;;;;;;;;AAW3C,MAAM,cAAc;IAMzB,YAAoB,WAAwB,EAAU,MAAc,EAAU,WAA8B;QAAxF,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAmB;IAAI,CAAC;IAEjH,QAAQ;IACR,CAAC;IAGK,UAAU,CAAC,KAAK,EAAE,QAAQ;;YAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,KAAK,CAAC,kBAAkB,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,KAAK,CAAC,qBAAqB,CAAC,CAAC;aAC9B;iBACI;gBACH,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;gBAC9B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACvD,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAEhE,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAE7D,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBACrD,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B;qBACI;oBACH,KAAK,CAAC,2CAA2C,CAAC;iBACnD;aAEF;QAED,CAAC;KAAA;;4EArCQ,cAAc;8FAAd,cAAc;QCX3B,sEACE;QAAA,oEACE;QAAA,iFACE;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,wEACE;QAAA,2EACF;QADkB,iLAAmB;QAAnC,4DACF;QAAA,4DAAQ;QACV,4DAAiB;QACnB,4DAAI;QACJ,oEACE;QAAA,iFACE;QAAA,4EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,yEACE;QAAA,4EACF;QADkB,qLAAsB;QAAtC,4DACF;QAAA,4DAAQ;QACV,4DAAiB;QACnB,4DAAI;QAEJ,qEACE;QAAA,6EAA2E;QAAA,oEAAQ;QAAA,4DAAS;QAC5F,6EACE;QADwC,uIAAS,uCAA2B,IAAC;QAC7E,oEACF;QAAA,4DAAS;QACX,4DAAI;QACN,4DAAM;;QAnBkB,0DAAmB;QAAnB,8EAAmB;QAQnB,0DAAsB;QAAtB,iFAAsB;QAMA,0DAAgC;QAAhC,6IAAgC;;6FDRjE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;AAW3C,MAAM,iBAAiB;IAO5B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,QAAQ;IACR,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,KAAK,CAAC,kBAAkB,CAAC;SAC1B;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,KAAK,CAAC,mBAAmB,CAAC;SAC3B;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,sBAAsB,CAAC;SAC9B;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,KAAK,CAAC,yBAAyB,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;YACrC,KAAK,CAAC,0BAA0B,CAAC;SAClC;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC7D,KAAK,CAAC,uBAAuB,CAAC;SAC/B;aACI;YACH,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;gBACrC,KAAK,CAAC,0BAA0B,CAAC;aAClC;iBACI;gBACH,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;gBAE9B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAG3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAE1D,IAAG,IAAI,CAAC,cAAc,EAAE;oBACtB,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,MAAM,CAAC,CAAC;iBAChC;qBACI;oBACH,KAAK,CAAC,wBAAwB,CAAC;iBAChC;aACF;SACF;IACD,CAAC;;kFAtDQ,iBAAiB;iGAAjB,iBAAiB;QCX9B,wEAA0B;QAAA,wEAAa;QAAA,4DAAK;QAE5C,2EACE;QAAA,sEACE;QAAA,oEACE;QAAA,iFACE;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,wEACE;QAAA,2EACF;QADkB,mLAAkB;QAAlC,4DACF;QAAA,4DAAQ;QACV,4DAAiB;QACnB,4DAAI;QACJ,qEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,yEACE;QAAA,4EACF;QADkB,qLAAmB;QAAnC,4DACF;QAAA,4DAAQ;QACV,4DAAiB;QACnB,4DAAI;QACJ,qEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,yEACE;QAAA,4EACF;QADkB,wLAAsB;QAAtC,4DACF;QAAA,4DAAQ;QACV,4DAAiB;QACnB,4DAAI;QACJ,qEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,yEACE;QAAA,4EACF;QADkB,0LAAwB;QAAxC,4DACF;QAAA,4DAAQ;QACV,4DAAiB;QACnB,4DAAI;QAEJ,0EACE;QAAA,0EACE;QAAA,qEACE;QAAA,6EACE;QADwC,0IAAS,gBAAY,IAAC;QAC9D,oEACF;QAAA,4DAAS;QACX,4DAAI;QACN,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAQ;;QAvCkB,0DAAkB;QAAlB,6EAAkB;QAQlB,0DAAmB;QAAnB,8EAAmB;QAQnB,0DAAsB;QAAtB,iFAAsB;QAQtB,0DAAwB;QAAxB,mFAAwB;;6FDrBrC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEH;;;AAGpD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;KAEzB;CACF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEW;AACJ;;AAU/C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBALZ;YACP,4DAAY;YACZ,sEAAiB;SAClB;mIAEU,UAAU,mBANN,kEAAa,aAE1B,4DAAY;QACZ,sEAAiB;6FAGR,UAAU;cAPtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kEAAa,CAAC;gBAC7B,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAiB;iBAClB;aACF;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAEM,WAAW;QAChB,OAAO,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;;0EATU,aAAa;6FAAb,aAAa;QCP1B,yEACE;QAAA,sEACE;QAAA,oEAEF;QAAA,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,qEACE;QAAA,uDACF;QAAA,4DAAK;QACP,4DAAM;;QAFF,0DACF;QADE,qGACF;;6FDHW,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAuD;;AAOhD,MAAM,cAAc;IAIzB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EAPU,cAAc;8FAAd,cAAc;6FAAd,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAGE,mDAAK;;;;;;;;;;;;;;ACTR;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACI;;AAa5C,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAJX;YACL,4DAAY;SACf;mIAEQ,WAAW,mBARL,+DAAc,aAKzB,4DAAY,aAHZ,+DAAc;6FAMT,WAAW;cATvB,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,+DAAc,CAAC;gBAC9B,OAAO,EAAE;oBACL,+DAAc;iBACjB;gBACD,OAAO,EAAE;oBACL,4DAAY;iBACf;aACJ;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAO3C,MAAM,mBAAmB;IAE9B;IACA,CAAC;IAED,QAAQ;IAER,CAAC;;sFAPU,mBAAmB;mGAAnB,mBAAmB;QCPhC,iFACE;QAAA,4EAEE;QAAA,oEACF;QAAA,4DAAS;QACT,qEAA0C;QAC1C,4EACE;QAAA,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QACjC,4DAAS;QACT,4EACE;QAAA,2EAAU;QAAA,iEAAM;QAAA,4DAAW;QAC7B,4DAAS;QACX,4DAAc;;QAN8B,0DAAuB;QAAvB,6IAAuB;;6FDCtD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;;;;;;;;;;AAUhD,MAAM,oBAAoB;IAS/B,YAAoB,QAAqB,EAAU,cAA8B,EAC7D,MAAoB;QADpB,aAAQ,GAAR,QAAQ,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAC7D,WAAM,GAAN,MAAM,CAAc;IAAI,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAGD,mBAAmB;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;SACvC;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC;IAClC,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAC3D,KAAK,CAAC,8BAA8B,CAAC;SACtC;aAEI;YACH,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAE9B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACnD,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAEvC,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAE;gBAC1C,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;aACpC;YAED,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,8BAA8B;SAC/B;IACH,CAAC;;wFA1DU,oBAAoB;oGAApB,oBAAoB;QCVjC,sEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,2EACF;QAD2B,uLAAmB;QAA5C,4DACF;QAAA,4DAAiB;QACnB,4DAAM;QAEN,sEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,2EACF;QAD2B,uLAAmB;QAA5C,4DACF;QAAA,4DAAiB;QACnB,4DAAM;QAEN,uEACE;QAAA,qFACE;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,4EACF;QAD2B,uLAAkB;QAA3C,4DACF;QAAA,4DAAiB;QACnB,4DAAM;QAEN,uEACE;QAAA,qFACE;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,4EACF;QAD2B,wLAAmB;QAA5C,4DACF;QAAA,4DAAiB;QACnB,4DAAM;QAGN,uEACE;QAAA,6EACE;QADwC,6IAAS,cAAU,IAAC;QAC5D,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC3B,4DAAS;QACX,4DAAM;;QA9BuB,0DAAmB;QAAnB,8EAAmB;QAOnB,0DAAmB;QAAnB,8EAAmB;QAOnB,0DAAkB;QAAlB,6EAAkB;QAOlB,0DAAmB;QAAnB,8EAAmB;;6FDdnC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAQE,mDAAK;;;;;;;;;;;;;;AEjBR;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,sBAAsB;IAEjC;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QCRnC,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAGvB,8EAAqC;;6FDKxB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,oBAAoB;IAE/B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QCPjC,oEAAG;QAAA,8EAAmB;QAAA,4DAAI;;6FDOb,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;;;;;;;;;;;AENiD;;;;;;;;ICgBhD,qEACE;IAAA,wEACE;IAAA,qEAAI;IAAA,uDAAiF;IAAA,4DAAK;IAC1F,qEAAI;IAAA,uDAAwC;IAAA,4DAAK;IACjD,qEAAI;IAAA,uDAAsC;IAAA,4DAAK;IACjD,qEAAe;IACjB,4DAAK;;;IAJG,0DAAiF;IAAjF,qKAAiF;IACjF,0DAAwC;IAAxC,2GAAwC;IACxC,0DAAsC;IAAtC,yGAAsC;;;ADZzC,MAAM,qBAAqB;IAGhC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEI,eAAe;;YAClB,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC;KAAA;;0FAZU,qBAAqB;qGAArB,qBAAqB;QCRlC,qEACE;QAAA,8EACF;QAAA,4DAAK;QACL,4EACE;QAAA,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QACjC,4DAAS;QAGT,2EACE;QAAA,qEACE;QAAA,wEACE;QAAA,gEAAS;QACT,gEAAS;QACT,iEAAS;QACX,qEAAe;QACjB,4DAAK;QACL,iHACE;QAMJ,4DAAQ;;QApBkC,0DAAiC;QAAjC,6IAAiC;QAarE,0DAAqC;QAArC,qFAAqC;;6FDR9B,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqC;AACL;AACG;;;AAI1F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0GAAyB;KACrC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,qGAAqB;KACjC;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,wGAAsB;KAClC;CACF,CAAC;AAMK,MAAM,6BAA6B;;4GAA7B,6BAA6B;oLAA7B,6BAA6B,kBAH/B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,6BAA6B,uFAF9B,4DAAY;6FAEX,6BAA6B;cAJzC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEqC;AACU;AACrC;AAEgC;AAClC;AACF;AACE;AACmC;AAC/C;AAC2C;AACA;;AAe/E,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAVxB;YACP,4DAAY;YACZ,gGAA6B;YAC7B,wEAAe;YACf,sEAAc;YACd,oEAAa;YACb,sEAAc;YACd,2DAAW;SACZ;mIAEU,sBAAsB,mBAXlB,0GAAyB,EAAE,qGAAqB,EAAE,wGAAsB,EAAE,mGAAoB,EAAE,mGAAoB,aAEjI,4DAAY;QACZ,gGAA6B;QAC7B,wEAAe;QACf,sEAAc;QACd,oEAAa;QACb,sEAAc;QACd,2DAAW;6FAGF,sBAAsB;cAZlC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0GAAyB,EAAE,qGAAqB,EAAE,wGAAsB,EAAE,mGAAoB,EAAE,mGAAoB,CAAC;gBACpI,OAAO,EAAE;oBACP,4DAAY;oBACZ,gGAA6B;oBAC7B,wEAAe;oBACf,sEAAc;oBACd,oEAAa;oBACb,sEAAc;oBACd,2DAAW;iBACZ;aACF;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,yBAAyB;IAEpC;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kGALU,yBAAyB;yGAAzB,yBAAyB;QCPtC,qEACE;QAAA,iFACF;QAAA,4DAAK;QAGL,sEACE;QAAA,sEACE;QAAA,4EAAuD;QAAA,mEAAQ;QAAA,4DAAS;QAC1E,4DAAM;QACR,4DAAM;;QAFwB,0DAA4B;QAA5B,6IAA4B;;6FDA7C,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AACtB;;;;AAQjC,MAAM,WAAW;IAItB,YAAoB,IAAgB,EAAS,MAAc;QAAvC,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzD,QAAQ,CAAC,IAAI;QAClB,IAAI,GAAG,GAAG,GAAG,qEAAW,CAAC,MAAM,gBAAgB,CAAC;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAClD,CAAC;IAEM,SAAS,CAAC,IAAI;QACnB,MAAM,GAAG,GAAG,GAAG,qEAAW,CAAC,MAAM,iBAAiB,CAAC;QAEnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,QAAY,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACtD,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,WAAW;QACT,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAEhC,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;sEA/BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEqB;AAC3B;;;;AAM9B,MAAM,cAAc;IAEzB,YAAoB,IAAgB,EAAS,MAAc;QAAvC,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzD,WAAW,CAAC,IAAI,EAAE,SAAS;QAC9B,IAAI,GAAG,GAAG,GAAG,qEAAW,CAAC,MAAM,UAAU,CAAC;QAE1C,IAAG,SAAS,EAAE;YACZ,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAClD,CAAC;IAEI,eAAe,CAAC,MAAM;QAC3B,IAAI,GAAG,GAAG,GAAG,qEAAW,CAAC,MAAM,4BAA4B,MAAM,EAAE,CAAC;QAEpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAC5B,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC/D,CAAC;;4EApBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,wBAAwB;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": \"./src/app/auth/auth.module.ts\",\n\t\"./home/home.module\": \"./src/app/home/home.module.ts\",\n\t\"./never-forget-atext/never-forget-atext.module\": \"./src/app/never-forget-atext/never-forget-atext.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthService} from \"./utilities/services/auth.service\";\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: './auth/auth.module#AuthModule',\n  },\n  {\n    path: 'home',\n    loadChildren: './home/home.module#HomeModule',\n    canActivate:[AuthService]\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full',\n    canActivate:[AuthService]\n  },\n  {\n    path: 'text',\n    loadChildren: './never-forget-atext/never-forget-atext.module#NeverForgetATextModule',\n    canActivate:[AuthService]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {anchorScrolling: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-navigation></app-navigation>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {NavigationComponent} from \"./navigation/navigation.component\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {NeverForgetATextModule} from \"./never-forget-atext/never-forget-atext.module\";\nimport {IconsModule} from \"./icons/icons.module\";\nimport {AuthModule} from \"./auth/auth.module\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {HomeModule} from \"./home/home.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatIconModule,\n        NeverForgetATextModule,\n        IconsModule,\n        AuthModule,\n        HttpClientModule,\n        MatSnackBarModule,\n        HomeModule,\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport {RouterModule} from \"@angular/router\";\nimport {AuthRouting} from \"./auth.routing\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatInputModule} from \"@angular/material/input\";\n\n@NgModule({\n  declarations: [AuthComponent, LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthRouting),\n    MatFormFieldModule,\n    FormsModule,\n    MatButtonModule,\n    MatInputModule\n  ]\n})\nexport class AuthModule { }\n","import {LoginComponent} from \"./login/login.component\";\nimport {AuthComponent} from \"./auth/auth.component\";\nimport {RegisterComponent} from \"./register/register.component\";\n\nexport const AuthRouting = [\n  {\n    path: '',\n    component: AuthComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path:  'registerForm',\n    component: RegisterComponent\n  },\n\n]\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align: center\">\n  <div style=\"display: inline-block\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n<app-login></app-login>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../utilities/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public email: any;\n  public password: any;\n  public name: any;\n  public userLogged: any;\n\n  constructor(private authService: AuthService, private router: Router, private matSnackBar: MatSnackBarModule) { }\n\n  ngOnInit(): void {\n  }\n\n\n  async submitForm(email, password) {\n    if (!this.email) {\n      alert('No email entered');\n    }\n    if (!this.password) {\n      alert('No password entered');\n    }\n    else {\n      let formData = new FormData();\n      formData.append('email', this.email ? this.email : '');\n      formData.append('password', this.password ? this.password : '');\n\n      this.userLogged = await this.authService.userLogin(formData);\n\n      if (this.userLogged) {\n        sessionStorage.setItem('user', this.userLogged.name);\n        sessionStorage.setItem('id', this.userLogged.id);\n        this.router.navigate(['']);\n      }\n      else {\n        alert('Username or password do not match records')\n      }\n\n    }\n\n    }\n}\n","<div>\n  <p>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <label>\n        <input matInput [(ngModel)]=\"email\" required=\"required\" type=\"email\">\n      </label>\n    </mat-form-field>\n  </p>\n  <p>\n    <mat-form-field>\n      <mat-label>Password</mat-label>\n      <label>\n        <input matInput [(ngModel)]=\"password\" required=\"required\" type=\"password\">\n      </label>\n    </mat-form-field>\n  </p>\n\n  <p>\n    <button color=\"primary\" mat-raised-button [routerLink]=\"['/registerForm']\">Register</button>\n    <button color='primary' mat-raised-button (click)=\"submitForm(email, password)\">\n      Submit\n    </button>\n  </p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../utilities/services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public name: any;\n  public email: any;\n  public password: any;\n  public rePassword: any;\n  public userRegistered: any;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  submitForm() {\n    if (!this.name) {\n      alert('Must have a Name')\n    }\n    if (!this.email) {\n      alert('Must have a email')\n    }\n    if (!this.password) {\n      alert('Must have a password')\n    }\n    if (!this.rePassword) {\n      alert('Must reenter a password')\n    }\n    if (this.password !== this.rePassword) {\n      alert('Password does not match.')\n    }\n    if (!this.email.includes('@') || !this.email.includes('.com')) {\n      alert('must be proper email.')\n    }\n    else {\n      if (this.password !== this.rePassword) {\n        alert('Password does not match.')\n      }\n      else {\n        let formData = new FormData();\n\n        formData.append('name', this.name);\n        formData.append('email', this.email);\n        formData.append('password', this.password);\n\n\n        this.userRegistered = this.authService.saveUser(formData);\n\n        if(this.userRegistered) {\n          sessionStorage.setItem('user', this.userRegistered);\n          this.router.navigate( ['home'])\n        }\n        else {\n          alert('Email is already used.')\n        }\n      }\n    }\n    }\n\n}\n","<h1 class=\"centerHeading\">User Register</h1>\n\n<table class=\"mat-elevation-z4\">\n  <div>\n    <p>\n      <mat-form-field>\n        <mat-label>First Name</mat-label>\n        <label>\n          <input matInput [(ngModel)]=\"name\" required=\"required\">\n        </label>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <mat-label>E-Mail</mat-label>\n        <label>\n          <input matInput [(ngModel)]=\"email\" required=\"required\" type=\"email\">\n        </label>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <label>\n          <input matInput [(ngModel)]=\"password\" required=\"required\" type=\"password\">\n        </label>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <mat-label>Re-enter Password</mat-label>\n        <label>\n          <input matInput [(ngModel)]=\"rePassword\" required=\"required\" type=\"password\">\n        </label>\n      </mat-form-field>\n    </p>\n\n    <div class=\"button\">\n      <div class=\"button\">\n        <p>\n          <button color='primary' mat-raised-button (click)=\"submitForm()\">\n            Submit\n          </button>\n        </p>\n      </div>\n    </div>\n  </div>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from \"../auth/login/login.component\";\nimport {HomeComponent} from \"./home/home.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public getUserName() {\n    return sessionStorage.getItem('user');\n  }\n\n}\n","<div class=\"center\">\n  <div>\n    <img width=\"300\" src=\"/assets/img/mainLogo.png\">\n\n  </div>\n</div>\n\n<div class=\"center\">\n  <h1>\n    Welcome {{getUserName()}}\n  </h1>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-icons',\n  templateUrl: './icons.component.html',\n  styleUrls: ['./icons.component.scss']\n})\nexport class IconsComponent implements OnInit {\n\n  @Input() name: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconsComponent } from './icons.component';\n\n\n\n@NgModule({\n    declarations: [IconsComponent],\n    exports: [\n        IconsComponent\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class IconsModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"center\">\n  <button mat-button routerLink=\"/\">\n\n    <img src=\"/assets/img/mainLogo.png\">\n  </button>\n  <span class=\"fill-remaining-space\"></span>\n  <button mat-raised-button mat-icon-button [routerLink]=\"['text']\">\n    <mat-icon>smartphone</mat-icon>\n  </button>\n  <button mat-raised-button mat-icon-button [routerLink]=\"\">\n    <mat-icon>person</mat-icon>\n  </button>\n</mat-toolbar>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {ContactService} from \"../../../utilities/services/contact.service\";\nimport { Routes, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.scss']\n})\nexport class ContactFormComponent implements OnInit {\n  public fName: any;\n  public lName: any;\n  public cell: any;\n  public email: any;\n  private userID: any;\n\n  @Input() contactToEdit: any;\n\n  constructor(private snackBar: MatSnackBar, private contactService: ContactService,\n              private router: RouterModule) { }\n\n  ngOnInit() {\n    this.assignContactToEdit();\n  }\n\n\n  assignContactToEdit() {\n    this.getCurrentUser();\n    if (this.contactToEdit) {\n      this.fName = this.contactToEdit.fName;\n      this.lName = this.contactToEdit.lName;\n      this.cell = this.contactToEdit.cell;\n      this.email = this.contactToEdit.email;\n    }\n  }\n\n  getCurrentUser() {\n    this.userID = sessionStorage.id;\n  }\n\n\n  saveForm() {\n    if (!this.fName || !this.lName || !this.email || !this.cell) {\n      alert('Missing required information')\n    }\n\n    else {\n      let formData = new FormData();\n\n      formData.append('fname', this.fName ? this.fName : '')\n      formData.append('lName', this.lName ? this.lName : '')\n      formData.append('cell', this.cell ? this.cell : '')\n      formData.append('email', this.email ? this.email : '')\n      formData.append('userID', this.userID);\n\n      let userID = false;\n\n      if (typeof this.contactToEdit === 'object') {\n        userID = this.contactToEdit.userID;\n      }\n\n      this.contactService.saveContact(formData, userID);\n      this.snackBar.open('Saved', 'X', {\n        duration: 4000\n      });\n      // this.router.navigate(['']);\n    }\n  }\n\n}\n\n","<div>\n  <mat-form-field class=\"line-width\">\n    <mat-label>First Name</mat-label>\n    <input matInput required [(ngModel)]=\"fName\">\n  </mat-form-field>\n</div>\n\n<div>\n  <mat-form-field class=\"line-width\">\n    <mat-label>Last Name</mat-label>\n    <input matInput required [(ngModel)]=\"lName\">\n  </mat-form-field>\n</div>\n\n<div>\n  <mat-form-field class=\"line-width\">\n    <mat-label>Cell Number</mat-label>\n    <input matInput required [(ngModel)]=\"cell\">\n  </mat-form-field>\n</div>\n\n<div>\n  <mat-form-field class=\"line-width\">\n    <mat-label>Email Adress</mat-label>\n    <input matInput required [(ngModel)]=\"email\">\n  </mat-form-field>\n</div>\n\n\n<div>\n  <button mat-raised-button color=\"primary\" (click)=\"saveForm()\">\n    <mat-icon>save</mat-icon>\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatFormField } from \"@angular/material/form-field\";\n\n@Component({\n  selector: 'app-create-contact',\n  templateUrl: './create-contact.component.html',\n  styleUrls: ['./create-contact.component.scss']\n})\nexport class CreateContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<h1>Create Contact</h1>\n\n\n<app-contact-form></app-contact-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.scss']\n})\nexport class EditContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-contact works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {ContactService} from \"../../../utilities/services/contact.service\";\n\n@Component({\n  selector: 'app-user-contacts',\n  templateUrl: './user-contacts.component.html',\n  styleUrls: ['./user-contacts.component.scss']\n})\nexport class UserContactsComponent implements OnInit {\n  public userContacts: any;\n\n  constructor(private contactService: ContactService) { }\n\n  ngOnInit(): void {\n    this.getUserContacts();\n  }\n\n async getUserContacts() {\n    this.userContacts = await this.contactService.getUserContacts(sessionStorage.id);\n    console.log(this.userContacts);\n  }\n\n}\n","<h1>\n  Current Contacts\n</h1>\n<button mat-raised-button mat-icon-button [routerLink]=\"['/createContact']\">\n  <mat-icon>person_add</mat-icon>\n</button>\n\n\n<table class=\"mat-elevation-z4 center\">\n  <tr>\n    <ng-container>\n      <th></th>\n      <th></th>\n      <th></th>\n    </ng-container>\n  </tr>\n  <tr *ngFor=\"let contacts of userContacts\">\n    <ng-container>\n      <td>{{contacts.fname ? contacts.fname : ''}} {{contacts.lname ? contacts.lname : ''}}</td>\n      <td>{{contacts.email ? contacts.email : ''}}</td>\n      <td>{{contacts.cell ? contacts.cell : ''}}</td>\n    </ng-container>\n  </tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NeverForgetATextComponent} from \"./never-forget-atext/never-forget-atext.component\";\nimport {UserContactsComponent} from \"./contacts/user-contacts/user-contacts.component\";\nimport {CreateContactComponent} from \"./contacts/create-contact/create-contact.component\";\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NeverForgetATextComponent\n  },\n  {\n    path: 'contacts',\n    component: UserContactsComponent\n  },\n  {\n    path: 'createContact',\n    component: CreateContactComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NeverForgetATextRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NeverForgetATextRoutingModule } from './never-forget-atext-routing.module';\nimport { NeverForgetATextComponent } from './never-forget-atext/never-forget-atext.component';\nimport {MatButtonModule} from \"@angular/material/button\";\n\nimport { UserContactsComponent } from './contacts/user-contacts/user-contacts.component';\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {CreateContactComponent} from \"./contacts/create-contact/create-contact.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport { EditContactComponent } from './contacts/edit-contact/edit-contact.component';\nimport { ContactFormComponent } from './contacts/contact-form/contact-form.component';\n\n\n@NgModule({\n  declarations: [NeverForgetATextComponent, UserContactsComponent, CreateContactComponent, EditContactComponent, ContactFormComponent],\n  imports: [\n    CommonModule,\n    NeverForgetATextRoutingModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n  ]\n})\nexport class NeverForgetATextModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-never-forget-atext',\n  templateUrl: './never-forget-atext.component.html',\n  styleUrls: ['./never-forget-atext.component.scss']\n})\nexport class NeverForgetATextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>\n  Never Forget A Text\n</h1>\n\n\n<div>\n  <div>\n    <button mat-raised-button [routerLink]=\"['/contacts']\">Contacts</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {environment} from \"../../../environments/environment\";\nimport {map, tap} from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {getToken} from \"codelyzer/angular/styles/cssLexer\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private token: string;\n  private redirectUrl: string;\n\n  constructor(private http: HttpClient, public router: Router) { }\n\n  public saveUser(body) {\n    let url = `${environment.apiUrl}/auth/register`;\n\n    return this.http.post(url, body).pipe(\n      map((response: any) => response)).toPromise();\n  }\n\n  public userLogin(body) {\n    const url = `${environment.apiUrl}/auth/userLogin`;\n\n    return this.http.post(url, body).pipe(\n      map((response:any) => response.user)).toPromise();\n  }\n\n  public getToken() {\n    return this.token;\n  }\n\n  canActivate(): boolean {\n    if (sessionStorage.getItem('id') == null) {\n      this.router.navigate(['login']);\n\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport { map } from 'rxjs/operators';\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private http: HttpClient, public router: Router) { }\n\n  public saveContact(body, contactID) {\n      let url = `${environment.apiUrl}/contact`;\n\n      if(contactID) {\n        url += '/' + contactID;\n      }\n\n      return this.http.post(url, body).pipe(\n        map((response: any) => response)).toPromise();\n    }\n\n  public getUserContacts(userID) {\n    let url = `${environment.apiUrl}/contact/getUserContacts/${userID}`;\n\n    return this.http.get(url).pipe(\n      map((response: any) => response.userContacts)).toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://jacoby.test/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}